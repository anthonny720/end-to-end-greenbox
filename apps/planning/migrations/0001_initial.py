# Generated by Django 3.2 on 2022-12-21 14:44

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('raw_material', '0007_auto_20221216_1513'),
    ]

    operations = [
        migrations.CreateModel(
            name='IndicatorPineapple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Fecha de ingreso')),
                ('entry', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Ingreso proyectado')),
                ('entry_real', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Ingreso real')),
                ('discard', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, null=True, verbose_name='Descarte')),
                ('kg_brute', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, null=True, verbose_name='Kg Bruto Procesado')),
                ('entry_objective', models.IntegerField(default=100)),
                ('objective', models.IntegerField(default=90)),
                ('price_objective', models.DecimalField(decimal_places=2, max_digits=7)),
                ('lots', models.ManyToManyField(blank=True, to='raw_material.Lot', verbose_name='Lotes')),
            ],
            options={
                'verbose_name': 'Indicador de Pi単a',
                'verbose_name_plural': 'Indicadores de Pi単a',
            },
        ),
        migrations.CreateModel(
            name='IndicatorMango',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Fecha de ingreso')),
                ('entry', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Ingreso proyectado')),
                ('entry_real', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Ingreso real')),
                ('discard', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, null=True, verbose_name='Descarte')),
                ('kg_brute', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, null=True, verbose_name='Kg Bruto Procesado')),
                ('entry_objective', models.IntegerField(default=100)),
                ('objective', models.IntegerField(default=90)),
                ('price_objective', models.DecimalField(decimal_places=2, max_digits=7)),
                ('defects_objective', models.IntegerField(default=15)),
                ('lots', models.ManyToManyField(blank=True, to='raw_material.Lot', verbose_name='Lotes')),
            ],
            options={
                'verbose_name': 'Indicador de Pi単a',
                'verbose_name_plural': 'Indicador de Pi単a',
            },
        ),
        migrations.CreateModel(
            name='IndicatorAguaymanto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Fecha de ingreso')),
                ('entry', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Ingreso proyectado')),
                ('entry_real', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Ingreso real')),
                ('discard', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, null=True, verbose_name='Descarte')),
                ('kg_brute', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=7, null=True, verbose_name='Kg Bruto Procesado')),
                ('entry_objective', models.IntegerField(default=100)),
                ('objective', models.IntegerField(default=90)),
                ('price_objective', models.DecimalField(decimal_places=2, max_digits=7)),
                ('lots', models.ManyToManyField(blank=True, to='raw_material.Lot', verbose_name='Lotes')),
            ],
            options={
                'verbose_name': 'Indicador de Aguaymanto',
                'verbose_name_plural': 'Indicador de Aguaymanto',
            },
        ),
    ]
